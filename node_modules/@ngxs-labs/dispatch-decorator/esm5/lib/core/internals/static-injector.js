/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NgZone } from '@angular/core';
import { Store } from '@ngxs/store';
var NgxsDispatchPluginModuleNotImported = /** @class */ (function (_super) {
    tslib_1.__extends(NgxsDispatchPluginModuleNotImported, _super);
    function NgxsDispatchPluginModuleNotImported() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.message = 'NgxsDispatchPluginModule is not imported';
        return _this;
    }
    return NgxsDispatchPluginModuleNotImported;
}(Error));
if (false) {
    /** @type {?} */
    NgxsDispatchPluginModuleNotImported.prototype.message;
}
/** @type {?} */
var injector = null;
/**
 * @template T
 * @param {?} actual
 * @return {?}
 */
function assertDefined(actual) {
    if (actual == null) {
        throw new NgxsDispatchPluginModuleNotImported();
    }
}
/**
 * @param {?} parentInjector
 * @return {?}
 */
export function setInjector(parentInjector) {
    injector = parentInjector;
}
/**
 * @return {?}
 */
export function getStore() {
    assertDefined(injector);
    return (/** @type {?} */ (injector)).get(Store);
}
/**
 * @return {?}
 */
export function getNgZone() {
    assertDefined(injector);
    return (/** @type {?} */ (injector)).get(NgZone);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLWluamVjdG9yLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5neHMtbGFicy9kaXNwYXRjaC1kZWNvcmF0b3IvIiwic291cmNlcyI6WyJsaWIvY29yZS9pbnRlcm5hbHMvc3RhdGljLWluamVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFZLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXBDO0lBQWtELCtEQUFLO0lBQXZEO1FBQUEscUVBRUM7UUFEQyxhQUFPLEdBQUcsMENBQTBDLENBQUM7O0lBQ3ZELENBQUM7SUFBRCwwQ0FBQztBQUFELENBQUMsQUFGRCxDQUFrRCxLQUFLLEdBRXREOzs7SUFEQyxzREFBcUQ7OztJQUduRCxRQUFRLEdBQW9CLElBQUk7Ozs7OztBQUVwQyxTQUFTLGFBQWEsQ0FBSSxNQUE0QjtJQUNwRCxJQUFJLE1BQU0sSUFBSSxJQUFJLEVBQUU7UUFDbEIsTUFBTSxJQUFJLG1DQUFtQyxFQUFFLENBQUM7S0FDakQ7QUFDSCxDQUFDOzs7OztBQUVELE1BQU0sVUFBVSxXQUFXLENBQUMsY0FBd0I7SUFDbEQsUUFBUSxHQUFHLGNBQWMsQ0FBQztBQUM1QixDQUFDOzs7O0FBRUQsTUFBTSxVQUFVLFFBQVE7SUFDdEIsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3hCLE9BQU8sbUJBQUEsUUFBUSxFQUFDLENBQUMsR0FBRyxDQUFRLEtBQUssQ0FBQyxDQUFDO0FBQ3JDLENBQUM7Ozs7QUFFRCxNQUFNLFVBQVUsU0FBUztJQUN2QixhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEIsT0FBTyxtQkFBQSxRQUFRLEVBQUMsQ0FBQyxHQUFHLENBQVMsTUFBTSxDQUFDLENBQUM7QUFDdkMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdG9yLCBOZ1pvbmUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5neHMvc3RvcmUnO1xuXG5jbGFzcyBOZ3hzRGlzcGF0Y2hQbHVnaW5Nb2R1bGVOb3RJbXBvcnRlZCBleHRlbmRzIEVycm9yIHtcbiAgbWVzc2FnZSA9ICdOZ3hzRGlzcGF0Y2hQbHVnaW5Nb2R1bGUgaXMgbm90IGltcG9ydGVkJztcbn1cblxubGV0IGluamVjdG9yOiBJbmplY3RvciB8IG51bGwgPSBudWxsO1xuXG5mdW5jdGlvbiBhc3NlcnREZWZpbmVkPFQ+KGFjdHVhbDogVCB8IG51bGwgfCB1bmRlZmluZWQpOiBuZXZlciB8IHZvaWQge1xuICBpZiAoYWN0dWFsID09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgTmd4c0Rpc3BhdGNoUGx1Z2luTW9kdWxlTm90SW1wb3J0ZWQoKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0SW5qZWN0b3IocGFyZW50SW5qZWN0b3I6IEluamVjdG9yKTogdm9pZCB7XG4gIGluamVjdG9yID0gcGFyZW50SW5qZWN0b3I7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdG9yZSgpOiBuZXZlciB8IFN0b3JlIHtcbiAgYXNzZXJ0RGVmaW5lZChpbmplY3Rvcik7XG4gIHJldHVybiBpbmplY3RvciEuZ2V0PFN0b3JlPihTdG9yZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXROZ1pvbmUoKTogbmV2ZXIgfCBOZ1pvbmUge1xuICBhc3NlcnREZWZpbmVkKGluamVjdG9yKTtcbiAgcmV0dXJuIGluamVjdG9yIS5nZXQ8Tmdab25lPihOZ1pvbmUpO1xufVxuIl19